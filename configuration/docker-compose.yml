version: '3.8'

services:
  backend:
    image: service-kafka-pipeline-editor:latest
    networks:
      hera_network:
        ipv4_address: 192.168.0.14
    environment:
      - FLASK_ENV=development
      - DB_HOST=localhost
      - DB_PORT=3306
      - DB_NAME=dev
      - DB_USER=dev
      - DB_PASSWORD=dev
    depends_on:
      database:
        condition: service_healthy

  frontend:
    image: kafka-workers-visualizer:latest
    networks:
      hera_network:
        ipv4_address: 192.168.0.15
    env_file:
      - ./kafka-workers-visualizer/.env
    depends_on:
      - backend

  database:
    image: mysql:8.0
    networks:
      hera_network:
        ipv4_address: 192.168.0.16
    environment:
      MYSQL_ROOT_PASSWORD: dev
      MYSQL_DATABASE: dev
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Add volume for persistent MySQL data
    volumes:
      - mysql-data:/var/lib/mysql 

  kafka:
    image: bitnami/kafka:latest
    networks:
      hera_network:
        ipv4_address: 192.168.0.17
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    container_name: kafka
    volumes:
      - ./kafka_data:/bitnami/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      hera_network:
        ipv4_address: 192.168.0.18
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
    depends_on:
      - kafka
    container_name: kafka-ui

  postgres_db:
    image: postgres:latest
    container_name: postgresql-container
    restart: unless-stopped
    volumes:
      - postgres_pgdata:/var/lib/postgresql/data
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    networks:
      hera_network:
        ipv4_address: 192.168.0.10
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: hera_data
      PGDATA: /var/lib/postgresql/data/pgdata
      DATABASE_HOST: hera_data
      POSTGRES_MULTIPLE_DATABASES: hera_stack,hera_template,hera_task,hera_data,hera_iam
      SCHEMA: hera
      ANON: web_anon
      AUTHENTICATOR: authenticator
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 100000
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 100000
        window: 10s
      placement:
        constraints: [ node.role == manager ]
  
  pgadmin:
#    image: dpage/pgadmin4:latest - do not use latest or 8.11 - has a bug on display record list, until fix use 8.10
    image: dpage/pgadmin4:8.10
    container_name: pgadmin4-container
    restart: unless-stopped
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      # - pgadmin-data:/pgadmin4/servers.json
    networks:
      hera_network:
        ipv4_address: 192.168.0.11
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: me@io.ro
      PGADMIN_DEFAULT_PASSWORD: "[][][]"
      # PGADMIN_CONFIG_SERVER_MODE: False
      # PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: False
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-container
    restart: unless-stopped
    networks:
      hera_network:
        ipv4_address: 192.168.0.12
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # Collector, OpenTelemetry gRPC
      - "4318:4318"    # Collector, OpenTelemetry gRPC
      - "5775:5775"
      - "5778:5778"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "14250:14250"
      - "14267:14267"
      - "14268:14268"
    environment:
      - LOG_LEVEL=debug
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-container
    restart: unless-stopped
    networks:
      hera_network:
        ipv4_address: 192.168.0.13
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - postgres_db
      - jaeger
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

volumes:
  postgres_pgdata:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /opt/docker/pgdata
      o: bind
  pgadmin-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /opt/docker/pgadmin
      o: bind
  mysql-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: /opt/docker/mysql
      o: bind    

networks:
  hera_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1


# mkdir -p /opt/docker/pgdata &&  chmod -R 777 /opt/docker/pgdata
# mkdir -p /opt/docker/pgadmin &&  chmod -R 777 /opt/docker/pgadmin
# mkdir -p /opt/docker/mysql &&  chmod -R 777 /opt/docker/mysql